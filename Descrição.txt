Frontend (GUI - Interface Gráfica do Usuário):

Listagem de Tarefas: Deve exibir todas as tarefas a serem realizadas.
Adição de Tarefa: Deve permitir que o usuário adicione novas tarefas à lista.
Remoção de Tarefa: Deve permitir que o usuário remova tarefas da lista.
Marcação de Tarefa como Concluída: Deve permitir que o usuário marque uma tarefa como concluída.
Filtragem de Tarefas: Pode incluir opções para filtrar tarefas por estado (concluída/não concluída).
Responsividade: Deve ser responsivo para diferentes tamanhos de tela, incluindo dispositivos móveis.
Backend:

API RESTful: Deve fornecer uma API para manipular operações CRUD (Create, Read, Update, Delete) nas tarefas.
Persistência de Dados: Deve armazenar as tarefas em um banco de dados, como MongoDB, MySQL, PostgreSQL, etc.
Validação de Dados: Deve validar os dados recebidos do frontend antes de processá-los.
Segurança: Deve implementar medidas de segurança, como autenticação e autorização, dependendo dos requisitos.
Especificação Técnica:

React: Use React para criar a interface do usuário, dividindo-a em componentes reutilizáveis.
Node.js: Use Node.js para criar o backend da aplicação, aproveitando o JavaScript no lado do servidor.
Express.js: Use o framework Express.js para criar o servidor HTTP no backend, facilitando o roteamento e a criação da API.
Banco de Dados: Escolha um banco de dados adequado para armazenar as tarefas, considere as necessidades de escalabilidade e desempenho.
API RESTful: Projete uma API RESTful consistente e intuitiva para interação entre o frontend e o backend.
Autenticação e Autorização: Implemente autenticação para proteger as rotas da API e garantir que apenas usuários autorizados possam acessar e manipular as tarefas.
Validação de Entrada: Valide os dados recebidos do frontend para evitar ataques de segurança, como injeção de código e XSS (Cross-Site Scripting).
Testes: Escreva testes unitários e de integração para garantir a qualidade e a estabilidade da aplicação.
Documentação: Documente a API e as funcionalidades da aplicação para facilitar o desenvolvimento, manutenção e integração com outros sistemas.
Essas são apenas algumas das especificações técnicas e funcionalidades essenciais de uma aplicação To-Do List usando React no frontend e Node.js no backend. Dependendo dos requisitos específicos do projeto, outras funcionalidades e considerações técnicas podem ser necessárias.